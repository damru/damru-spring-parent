<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.damru</groupId>
    <artifactId>damru-spring-boot-dependencies</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <properties>
        <revision>0.1-SNAPSHOT</revision>

        <mockserver-netty.version>5.5.4</mockserver-netty.version>
        <okta.version>1.3.0</okta.version>
        <openfeign.version>10.2.3</openfeign.version>
        <spring-boot.version>2.1.9.RELEASE</spring-boot.version>
        <spring-cloud.version>Greenwich.SR3</spring-cloud.version>
        <spring-security-oauth2.version>2.3.7.RELEASE</spring-security-oauth2.version>

        <flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-exception-autoconfigure</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-openfeign-autoconfigure</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-security-autoconfigure</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-starter-openfeign</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-starter-rest</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-starter-rest-flux</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-starter-security</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-starter-security-flux</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-starter-security-oauth2</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.damru</groupId>
                <artifactId>damru-spring-boot-starter-test</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${spring-security-oauth2.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-reactive-wrappers</artifactId>
                <version>${openfeign.version}</version>
            </dependency>

            <dependency>
                <groupId>com.okta.spring</groupId>
                <artifactId>okta-spring-boot-starter</artifactId>
                <version>${okta.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>bom</flattenMode>
                            <pomElements>
                                <pluginManagement>keep</pluginManagement>
                                <properties>keep</properties>
                                <repositories>remove</repositories>
                            </pomElements>
                        </configuration>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
